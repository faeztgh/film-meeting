{"version":3,"sources":["Components/dialog/index.jsx","Components/users-table/index.jsx"],"names":["useStyle","makeStyles","root","background","MyDialog","props","open","handleClose","scroll","descriptionElementRef","movie","classes","Dialog","className","onClose","aria-labelledby","aria-describedby","DialogTitle","id","name","DialogContent","dividers","DialogContentText","ref","tabIndex","review","DialogActions","Button","onClick","Table","value","handleChange","handleIsMobile","isMobile","setOpen","useStyles","useRef","useState","setScroll","movieData","setMovieData","useEffect","descriptionElement","current","focus","Grid","container","spacing","item","xs","lg","sm","md","Tabs","orientation","variant","onChange","aria-label","tabs","Data","map","data","Tab","label","index","TabPanel","movies","e","scrollType","year","imdb","isWatched","href","dlLink","target","rel","children","other","role","hidden","Box","p","theme","flexGrow","backgroundColor","display","minHeight","width","borderRadius","padding","filter","margin","position","borderRight","palette","divider","heading","fontSize","typography","pxToRem","fontWeight","fontWeightBold","textTransform"],"mappings":"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","file":"static/js/10.1336cd2f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyle = makeStyles(() => ({\r\n    root: {\r\n        background: \"linear-gradient(-45deg, #232526, #414345)\",\r\n    },\r\n}));\r\n\r\nfunction MyDialog(props) {\r\n    const { open, handleClose, scroll, descriptionElementRef, movie } = props;\r\n    const classes = useStyle();\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Dialog\r\n                    className={classes.root}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    scroll={scroll}\r\n                    aria-labelledby=\"scroll-dialog-title\"\r\n                    aria-describedby=\"scroll-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"scroll-dialog-title\">\r\n                        {movie.name}\r\n                    </DialogTitle>\r\n                    <DialogContent dividers={scroll === \"paper\"}>\r\n                        <DialogContentText\r\n                            id=\"scroll-dialog-description\"\r\n                            ref={descriptionElementRef}\r\n                            tabIndex={-1}\r\n                        >\r\n                            {movie.review !== \"\"\r\n                                ? movie.review\r\n                                : \"Sorry, No Review to show :(\"}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button\r\n                            className=\"dialog-close-btn\"\r\n                            onClick={handleClose}\r\n                        >\r\n                            Close\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MyDialog;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport MyDialog from \"../dialog\";\r\nimport Data from \"../../Data/Data\";\r\nimport \"./table.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nconst Table = (props) => {\r\n    const {\r\n        value,\r\n        handleChange,\r\n        open,\r\n        handleClose,\r\n        handleIsMobile,\r\n        isMobile,\r\n        setOpen,\r\n    } = props;\r\n\r\n    const classes = useStyles();\r\n    const descriptionElementRef = useRef(null);\r\n    const [scroll, setScroll] = useState(\"paper\");\r\n    const [movieData, setMovieData] = useState({});\r\n\r\n    const handleClickOpen = (scrollType, movie) => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n        setMovieData(movie);\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleIsMobile();\r\n\r\n        //-------------------\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [open]);\r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={12} lg={12} sm={12} md={12}>\r\n                <div className={classes.root}>\r\n                    <Tabs\r\n                        orientation=\"vertical\"\r\n                        variant=\"scrollable\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        aria-label=\"Vertical tabs example\"\r\n                        className={classes.tabs}\r\n                    >\r\n                        {Data.map((data) => {\r\n                            return (\r\n                                <Tab\r\n                                    key={data.id}\r\n                                    label={` ${data.name} `}\r\n                                    {...a11yProps(data.id)}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </Tabs>\r\n\r\n                    {Data.map((data) => {\r\n                        return (\r\n                            <div key={data.id}>\r\n                                <TabPanel value={value} index={data.id}>\r\n                                    {data.movies.map((e) => {\r\n                                        return (\r\n                                            <div\r\n                                                key={e.id}\r\n                                                className=\"movie-container\"\r\n                                            >\r\n                                                <MyDialog\r\n                                                    open={open}\r\n                                                    scroll={scroll}\r\n                                                    handleClose={handleClose}\r\n                                                    descriptionElementRef={\r\n                                                        descriptionElementRef\r\n                                                    }\r\n                                                    movie={movieData}\r\n                                                />\r\n\r\n                                                <div className=\"movie-name-wrapper\">\r\n                                                    <button\r\n                                                        className=\"movie-name-btn\"\r\n                                                        onClick={handleClickOpen(\r\n                                                            \"paper\",\r\n                                                            e\r\n                                                        )}\r\n                                                    >\r\n                                                        {e.name}\r\n                                                    </button>\r\n                                                </div>\r\n\r\n                                                {isMobile && (\r\n                                                    <div className=\"movie-year-wrapper\">\r\n                                                        {` | ${e.year} |`}\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                {isMobile && (\r\n                                                    <div className=\"imdb-wrapper\">\r\n                                                        {e.imdb}\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                <div\r\n                                                    id=\"is-watched\"\r\n                                                    className={\r\n                                                        e.isWatched\r\n                                                            ? \"watched\"\r\n                                                            : \"not-watched\"\r\n                                                    }\r\n                                                >\r\n                                                    {e.isWatched\r\n                                                        ? \"Watched\"\r\n                                                        : \"Not-Watched\"}\r\n                                                </div>\r\n                                                {isMobile && (\r\n                                                    <div className=\"download-link\">\r\n                                                        <a\r\n                                                            href={e.dlLink}\r\n                                                            target=\"_blank\"\r\n                                                            rel=\"noreferrer\"\r\n                                                        >\r\n                                                            Download\r\n                                                        </a>\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </TabPanel>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        \"aria-controls\": `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: \"#2d2d2d\",\r\n        display: \"flex\",\r\n        minHeight: \"500px\",\r\n        width: \"90%\",\r\n        borderRadius: \"15px\",\r\n        padding: \"80px 0\",\r\n        filter: \"drop-shadow(2px 15px 15px rgb(17, 17, 17))\",\r\n        margin: \"auto\",\r\n        position: \"relative\",\r\n    },\r\n    tabs: {\r\n        borderRight: `2px solid ${theme.palette.divider}`,\r\n    },\r\n\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(20),\r\n        fontWeight: theme.typography.fontWeightBold,\r\n        textTransform: \"capitalize\",\r\n    },\r\n}));\r\n"],"sourceRoot":""}